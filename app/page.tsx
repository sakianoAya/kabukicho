"use client"

import { useState, useEffect, useCallback, useMemo } from "react"
import { MapPin, Clock, Menu, X, Sparkles, Camera, Utensils, History, Lightbulb, Search } from "lucide-react"
import { Button } from "@/components/ui/button"
import { Card, CardContent } from "@/components/ui/card"
import { LazyImage } from "@/components/LazyImage"
import { FloatingNeonOrbs, ParallaxSection, NeonLines } from "@/components/ParallaxElements"
import { ScrollProgress } from "@/components/ScrollProgress"
import { NeonTubeTextLight, NeonTubeTextLightBlue } from "@/components/NeonTubeText"
import { NeonButton } from "@/components/NeonButton"
import { NeonNavItem } from "@/components/NeonNavItem"
import { SpotCard as SpotCardComponent } from "@/components/SpotCard"
import { GalleryImage as GalleryImageComponent } from "@/components/GalleryImage"
import { ImageModal } from "@/components/ImageModal"
import { useScrollPosition } from "@/hooks/useScrollPosition"
import type { JSX } from "react"

// Define types for data structures
interface NavigationItem {
  id: string
  label: string
  icon: JSX.Element
  variant?: "default" | "green" | "pink" | "yellow" | "blue"
}

interface GalleryCategory {
  id: string
  label: string
  icon: string
}

interface GalleryImageProps {
  id: number
  src: string
  title: string
  description: string
  category: string
  location: string
}

interface RecommendedSpot {
  name: string
  description: string
  image: string
  rating: number
}

interface SpotCardProps {
  title: string
  description: string
  image: string
  category: string
}

export default function KabukichoWebsite() {
  // State management
  const [activeSection, setActiveSection] = useState("hero")
  const [mobileMenuOpen, setMobileMenuOpen] = useState(false)
  const [selectedImage, setSelectedImage] = useState<number | null>(null)
  const [galleryCategory, setGalleryCategory] = useState("all")

  // Use custom hook for scroll position
  const { y: scrollY } = useScrollPosition({ throttleMs: 100 })
  const isScrolled = scrollY > 50

  // Navigation items with color variants
  const navigationItems: NavigationItem[] = useMemo(
    () => [
      { id: "hero", label: "„Éà„ÉÉ„Éó", icon: <Sparkles className="w-5 h-5" />, variant: "pink" },
      { id: "history", label: "Ê≠åËàû‰ºéÁî∫„ÅÆÊ≠¥Âè≤", icon: <History className="w-5 h-5" />, variant: "purple" },
      { id: "nightlife", label: "Â§ú„ÅÆ„Ç®„É≥„Çø„É°", icon: <Lightbulb className="w-5 h-5" />, variant: "yellow" },
      { id: "gourmet", label: "Áµ∂ÂìÅ„Ç∞„É´„É°", icon: <Utensils className="w-5 h-5" />, variant: "blue" },
      { id: "gallery", label: "„Éï„Ç©„Éà„ÇÆ„É£„É©„É™„Éº", icon: <Camera className="w-5 h-5" />, variant: "green" },
      { id: "hidden", label: "ÁßòÂØÜ„ÅÆÂ†¥ÊâÄ", icon: <Search className="w-5 h-5" />, variant: "pink" },
    ],
    [],
  )

  // Gallery categories
  const galleryCategories: GalleryCategory[] = useMemo(
    () => [
      { id: "all", label: "„Åô„Åπ„Å¶", icon: "üåü" },
      { id: "neon", label: "„Éç„Ç™„É≥„Çµ„Ç§„É≥", icon: "üí°" },
      { id: "street", label: "„Çπ„Éà„É™„Éº„ÉàÈ¢®ÊôØ", icon: "üõ£Ô∏è" },
      { id: "night", label: "Â§úÊôØ", icon: "üåô" },
      { id: "architecture", label: "Âª∫ÁØâÁâ©", icon: "üè¢" },
    ],
    [],
  )

  // Gallery images data
  const galleryImages: GalleryImageProps[] = useMemo(
    () => [
      {
        id: 1,
        src: "/Ê∑±Â§ú„ÅÆ„É©„Éº„É°„É≥.jpg",
        title: "„Éç„Ç™„É≥ÁÖå„ÇÅ„Åè‰∏ÄÁï™Ë°ó",
        description: "Ê≠åËàû‰ºéÁî∫„ÅÆË±°Âæ¥ÁöÑ„Å™„Ç≤„Éº„Éà„Å®„ÄÅÂ••„Å∏„Å®Á∂ö„Åè„Éç„Ç™„É≥„ÅÆÊ¥™Ê∞¥„ÄÇ",
        category: "neon",
        location: "Ê≠åËàû‰ºéÁî∫‰∏ÄÁï™Ë°ó",
      },
      {
        id: 2,
        src: "/IMG_5789.jpg",
        title: "Êò≠Âíå„Éé„Çπ„Çø„É´„Ç∏„Éº „Ç¥„Éº„É´„Éá„É≥Ë°ó",
        description: "Áã≠„ÅÑË∑ØÂú∞„Å´„Å≤„Åó„ÇÅ„ÅèÂ∞è„Åï„Å™„Éê„Éº„Åå„ÄÅÁã¨Áâπ„ÅÆÈõ∞Âõ≤Ê∞ó„ÇíÈÜ∏„ÅóÂá∫„Åô„ÄÇ",
        category: "street",
        location: "Êñ∞ÂÆø„Ç¥„Éº„É´„Éá„É≥Ë°ó",
      },
      {
        id: 3,
        src: "/Â§úÊôØ.jpg",
        title: "Ê≠åËàû‰ºéÁî∫„Çø„ÉØ„Éº„Å®Â§úÊôØ",
        description: "Êñ∞„Åü„Å™„É©„É≥„Éâ„Éû„Éº„ÇØ„ÄÅÊ≠åËàû‰ºéÁî∫„Çø„ÉØ„Éº„ÅåÂ§úÁ©∫„Å´ËÅ≥„ÅàÁ´ã„Å§„ÄÇ",
        category: "architecture",
        location: "Ê≠åËàû‰ºéÁî∫„Çø„ÉØ„Éº",
      },
      {
        id: 4,
        src: "/„É≠„Éú„ÉÉ„Éà.jpg",
        title: "„É≠„Éú„ÉÉ„Éà„É¨„Çπ„Éà„É©„É≥„ÅÆÂÖ•Âè£",
        description: "„ÉâÊ¥æÊâã„Å™Â§ñË¶≥„ÅåÁõÆ„ÇíÂºï„Åè„ÄÅ‰∏ñÁïåÁöÑ„Å´„ÇÇÊúâÂêç„Å™„Ç®„É≥„Çø„É°„Çπ„Éù„ÉÉ„Éà„ÄÇ‚ÄªÁèæÂú®‰ºëÊ•≠‰∏≠",
        category: "neon",
        location: "„É≠„Éú„ÉÉ„Éà„É¨„Çπ„Éà„É©„É≥",
      },
      {
        id: 5,
        src: "/Ëµ§ÊèêÁÅØ.jpg",
        title: "ÊÄù„ÅÑÂá∫Ê®™‰∏Å„ÅÆËµ§ÊèêÁÅØ",
        description: "ÁÖô„Å®Ê¥ªÊ∞ó„Å´ÂåÖ„Åæ„Çå„Åü„ÄÅÊòî„Å™„Åå„Çâ„ÅÆÈ£≤„ÅøÂ±ãË°ó„ÄÇ",
        category: "street",
        location: "ÊÄù„ÅÑÂá∫Ê®™‰∏Å",
      },
      
      // {
      //   id: 7,
      //   src: "/„Éë„ÉÅ„É≥„Ç≥2.jpg",
      //   title: "Ê∑±Â§ú„ÅÆÂ±ãÂè∞„Ç∞„É´„É°",
      //   description: "Â§úÈÅÖ„Åè„Åæ„ÅßË≥ë„Çè„ÅÜÂ±ãÂè∞„ÅßÂë≥„Çè„ÅÜ„ÄÅÁµ∂ÂìÅBÁ¥ö„Ç∞„É´„É°„ÄÇ",
      //   category: "street",
      //   location: "Ê≠åËàû‰ºéÁî∫„Ç®„É™„Ç¢",
      // },
      {
        id: 8,
        src: "/„Éç„Ç™„É≥.jpg",
        title: "„Éç„Ç™„É≥„Çµ„Ç§„É≥„Ç≥„É¨„ÇØ„Ç∑„Éß„É≥",
        description: "Ê≠åËàû‰ºéÁî∫„ÇíÂΩ©„Çã„ÄÅÂÄãÊÄßÁöÑ„Åß„Ç¢„Éº„ÉÜ„Ç£„Çπ„ÉÜ„Ç£„ÉÉ„ÇØ„Å™„Éç„Ç™„É≥„Çµ„Ç§„É≥„ÅÆÊï∞„ÄÖ„ÄÇ",
        category: "neon",
        location: "Ê≠åËàû‰ºéÁî∫ÂêÑÊâÄ",
      },
      {
        id: 9,
        src: "/„Éë„ÉÅ„É≥„Ç≥2.jpg",
        title: "Ê∑±Â§ú„ÅÆÊ≠åËàû‰ºéÁî∫",
        description: "Â§ú„ÅåÊõ¥„Åë„Å¶„ÇÇÁú†„Çâ„Å™„ÅÑË°ó„ÅÆÊ¥ªÊ∞ó„ÅÇ„Åµ„Çå„ÇãÈ¢®ÊôØ„ÄÇ",
        category: "night",
        location: "Ê≠åËàû‰ºéÁî∫‰∏≠Â§ÆÈÄö„Çä",
      },
      {
        id: 10,
        src: "/„Éë„ÉÅ„É≥„Ç≥2.jpg",
        title: "„Ç¥„Éº„É´„Éá„É≥Ë°ó„ÅÆË∑ØÂú∞",
        description: "Áã≠„ÅÑË∑ØÂú∞„Å´‰∏¶„Å∂ÂÄãÊÄßÁöÑ„Å™Â∫óËàóÁæ§„ÄÇ",
        category: "street",
        location: "Êñ∞ÂÆø„Ç¥„Éº„É´„Éá„É≥Ë°ó",
      },
      // {
      //   id: 11,
      //   src: "/„Éë„ÉÅ„É≥„Ç≥2.jpg",
      //   title: "„Çø„ÉØ„Éº„Åã„Çâ„ÅÆÁú∫Êúõ",
      //   description: "Ê≠åËàû‰ºéÁî∫„Çø„ÉØ„Éº„Åã„ÇâË¶ã‰∏ã„Çç„ÅôÂ§ú„ÅÆË°ó‰∏¶„Åø„ÄÇ",
      //   category: "architecture",
      //   location: "Ê≠åËàû‰ºéÁî∫„Çø„ÉØ„ÉºÂ±ïÊúõÂè∞",
      // },
      // {
      //   id: 12,
      //   src: "/„Éë„ÉÅ„É≥„Ç≥2.jpg",
      //   title: "„Ç®„É≥„Çø„É°„ÅÆÊÆøÂ†Ç",
      //   description: "Ëâ≤„Å®„Çä„Å©„Çä„ÅÆ„Éç„Ç™„É≥„ÅåË∏ä„Çã„ÄÅ„Ç®„É≥„Çø„Éº„ÉÜ„Ç§„É°„É≥„Éà„ÅÆËÅñÂú∞„ÄÇ",
      //   category: "neon",
      //   location: "Ê≠åËàû‰ºéÁî∫„Ç®„É≥„Çø„É°„Ç®„É™„Ç¢",
      // },
    ],
    [],
  )

  // Recommended spots data
  const recommendedSpots: RecommendedSpot[] = useMemo(
    () => [
      {
        name: "Êñ∞ÂÆø„Ç¥„Éº„É´„Éá„É≥Ë°ó",
        description: "Êò≠Âíå„ÅÆÈù¢ÂΩ±„ÇíÊÆã„Åô„ÄÅÂÄãÊÄßÁöÑ„Å™„Éê„Éº„ÅåÈõÜ„Åæ„Çã„Ç®„É™„Ç¢„ÄÇ",
        image: "/IMG_5789.jpg",
        rating: 4.8,
      },
      {
        name: "Ê≠åËàû‰ºéÁî∫„Çø„ÉØ„Éº",
        description: "„Ç®„É≥„Çø„É°Ë§áÂêàÊñΩË®≠„ÄÇ„Éõ„ÉÜ„É´„ÇÑÊò†ÁîªÈ§®„ÄÅ„É©„Ç§„Éñ„Éõ„Éº„É´„ÇÇ„ÄÇ",
        image: "/„Éë„ÉÅ„É≥„Ç≥2.jpg",
        rating: 4.7,
      },
      {
        name: "ÊÄù„ÅÑÂá∫Ê®™‰∏Å",
        description: "ÁÑº„ÅçÈ≥•„ÅÆÁÖô„ÅåÁ´ã„Å°Ëæº„ÇÅ„Çã„ÄÅÈ¢®ÊÉÖ„ÅÇ„ÇãÈ£≤„ÅøÂ±ãË°ó„ÄÇ",
        image: "/„Éë„ÉÅ„É≥„Ç≥2.jpg",
        rating: 4.6,
      },
    ],
    [],
  )

  // Spot cards data
  const spotCards: SpotCardProps[] = useMemo(
    () => [
      {
        title: "„Çµ„É†„É©„Ç§„Éü„É•„Éº„Ç∏„Ç¢„É†",
        description: "Êó•Êú¨„ÅÆÊ≠¶Â£´ÈÅìÁ≤æÁ•û„Å´Ëß¶„Çå„Çã„ÄÇÁî≤ÂÜëË©¶ÁùÄ„ÇÑÊÆ∫Èô£„Ç∑„Éß„Éº„ÇÇ‰∫∫Ê∞ó„ÄÇ ‚ÄªÁèæÂú®‰ºëÊ•≠‰∏≠",
        image: "/images/spots/museum.jpg",
        category: "ÊñáÂåñ‰ΩìÈ®ì",
      },
      {
        title: "„ÉÜ„É´„Éû„ÉºÊπØ",
        description: "ÈÉΩ‰ºö„ÅÆ„Ç™„Ç¢„Ç∑„Çπ„ÄÇÂ§©ÁÑ∂Ê∏©Ê≥â„ÇÑÂ≤©Áõ§Êµ¥„Åß„É™„Éï„É¨„ÉÉ„Ç∑„É•„ÄÇ",
        image: "/images/spots/oyu.jpg",
        category: "„É™„É©„ÇØ„Çº„Éº„Ç∑„Éß„É≥",
      },
      // {
      //   title: "VR ZONE SHINJUKUË∑°Âú∞Âë®Ëæ∫",
      //   description: "ÊúÄÊñ∞VR„ÇÑ„Ç®„É≥„Çø„É°„ÅåÈõÜ„Åæ„Çã„Ç®„É™„Ç¢„ÄÇÂ∏∏„Å´Êñ∞„Åó„ÅÑÂà∫ÊøÄ„Åå„ÄÇ",
      //   image: "/„Éë„ÉÅ„É≥„Ç≥2.jpg",
      //   category: "„Ç®„É≥„Çø„Éº„ÉÜ„Ç§„É°„É≥„Éà",
      // },
      {
        title: "Êñ∞ÂÆø„Ç¥„Éº„É´„Éá„É≥Ë°ó",
        description: "Êò≠Âíå„ÅÆÈù¢ÂΩ±„ÇíÊÆã„Åô„ÄÅÂÄãÊÄßÁöÑ„Å™„Éê„Éº„ÅåÈõÜ„Åæ„Çã„Ç®„É™„Ç¢„ÄÇÊ∑±Â§ú„Åæ„ÅßË≥ë„Çè„ÅÜÂ§ß‰∫∫„ÅÆÁ§æ‰∫§Â†¥„ÄÇ",
        image: "/IMG_5789.jpg",
        category: "„Éä„Ç§„Éà„É©„Ç§„Éï",
      },
      {
        title: "Ê≠åËàû‰ºéÁî∫„Çø„ÉØ„Éº",
        description: "„Ç®„É≥„Çø„É°Ë§áÂêàÊñΩË®≠„ÄÇ„Éõ„ÉÜ„É´„ÇÑÊò†ÁîªÈ§®„ÄÅ„É©„Ç§„Éñ„Éõ„Éº„É´„ÇÇ„ÄÇÊñ∞ÊôÇ‰ª£„ÅÆÊ≠åËàû‰ºéÁî∫„ÅÆ„Ç∑„É≥„Éú„É´„ÄÇ",
        image: "/Ê≠åËàû‰ºéÁî∫„Çø„ÉØ„Éº.jpg",
        category: "„É©„É≥„Éâ„Éû„Éº„ÇØ",
      },
      {
        title: "ÊÄù„ÅÑÂá∫Ê®™‰∏Å",
        description: "ÁÑº„ÅçÈ≥•„ÅÆÁÖô„ÅåÁ´ã„Å°Ëæº„ÇÅ„Çã„ÄÅÈ¢®ÊÉÖ„ÅÇ„ÇãÈ£≤„ÅøÂ±ãË°ó„ÄÇÊò≠Âíå„É¨„Éà„É≠„Å™Èõ∞Âõ≤Ê∞ó„ÅåÈ≠ÖÂäõ„ÄÇ",
        image: "/images/spots/omoi.jpg",
        category: "„Ç∞„É´„É°",
      },
//       {
//   // "title": "SHOW CLUB nest",
//   // "description": "Ê≠åËàû‰ºéÁî∫„Åß„ÇÇÁï∞ÂΩ©„ÇíÊîæ„Å§„ÄÅÊú¨Ê†ºÁöÑ„Å™„Éù„Éº„É´„ÉÄ„É≥„Çπ„ÇÑ„Éê„Éº„É¨„Çπ„ÇØ„Ç∑„Éß„Éº„ÅåÊ•Ω„Åó„ÇÅ„ÇãÂ§ß‰∫∫„ÅÆ„Ç®„É≥„Çø„Éº„ÉÜ„Ç§„É°„É≥„Éà„ÇØ„É©„Éñ„ÄÇ„Åç„Çâ„Å≥„ÇÑ„Åã„Å™„Çπ„ÉÜ„Éº„Ç∏„Å®Ëø´Âäõ„ÅÇ„Çã„Éë„Éï„Ç©„Éº„Éû„É≥„Çπ„ÅåÈ≠ÖÂäõ„ÄÇ",
//   // "image": "",
//   // "category": "„Ç®„É≥„Çø„Éº„ÉÜ„Ç§„É°„É≥„Éà"
// },
// {
//   // "title": "„Å≤„Åí„Ç¨„Éº„É´",
//   // "description": "ÂÄãÊÄßË±ä„Åã„Å™„Éã„É•„Éº„Éè„Éº„Éï„Çø„É¨„É≥„Éà„Åü„Å°„ÅåÁπ∞„ÇäÂ∫É„Åí„Çã„ÄÅÊä±ËÖπÁµ∂ÂÄí„ÅÆ„Éà„Éº„ÇØ„Å®ËèØ„ÇÑ„Åã„Å™„Ç∑„Éß„Éº„ÅåÂ§ß‰∫∫Ê∞ó„ÅÆËÄÅËàó„Ç∑„Éß„Éº„Éë„Éñ„ÄÇÁ¨ë„ÅÑ„Å®ÊÑüÂãï„Å´Ê∫Ä„Å°„Åü„ÄÅÂøò„Çå„Çâ„Çå„Å™„ÅÑÂ§ú„ÇíÁ¥ÑÊùü„Åó„Åæ„Åô„ÄÇ",
//   // "image": "",
//   // "category": "„Ç®„É≥„Çø„Éº„ÉÜ„Ç§„É°„É≥„Éà"
// }
    ],
    [],
  )

  // Filter gallery images based on selected category
  const filteredImages = useMemo(
    () => (galleryCategory === "all" ? galleryImages : galleryImages.filter((img) => img.category === galleryCategory)),
    [galleryCategory, galleryImages],
  )

  // Image modal handlers
  const openImageModal = useCallback((imageId: number) => {
    setSelectedImage(imageId)
  }, [])

  const closeImageModal = useCallback(() => {
    setSelectedImage(null)
  }, [])

  const navigateImage = useCallback(
    (direction: "prev" | "next") => {
      if (selectedImage === null) return

      const currentIndex = filteredImages.findIndex((img) => img.id === selectedImage)
      let newIndex

      if (direction === "prev") {
        newIndex = currentIndex > 0 ? currentIndex - 1 : filteredImages.length - 1
      } else {
        newIndex = currentIndex < filteredImages.length - 1 ? currentIndex + 1 : 0
      }

      setSelectedImage(filteredImages[newIndex].id)
    },
    [selectedImage, filteredImages],
  )

  // Smooth scroll to section
  const scrollToSection = useCallback((id: string) => {
    const element = document.getElementById(id)
    if (element) {
      element.scrollIntoView({ behavior: "smooth" })
      setActiveSection(id)
      setMobileMenuOpen(false)
    }
  }, [])

  // Update active section based on scroll position
  useEffect(() => {
    const handleScroll = () => {
      const sections = navigationItems.map((item) => item.id)

      // Find the current section in view
      for (const section of sections) {
        const element = document.getElementById(section)
        if (element) {
          const rect = element.getBoundingClientRect()
          // If the section is in view (with some buffer for better UX)
          if (rect.top <= 100 && rect.bottom >= 100) {
            setActiveSection(section)
            break
          }
        }
      }
    }

    window.addEventListener("scroll", handleScroll, { passive: true })
    return () => window.removeEventListener("scroll", handleScroll)
  }, [navigationItems])

  // Close mobile menu when window is resized to desktop
  useEffect(() => {
    const handleResize = () => {
      if (typeof window !== "undefined" && window.innerWidth >= 1280 && mobileMenuOpen) {
        setMobileMenuOpen(false)
      }
    }

    if (typeof window !== "undefined") {
      window.addEventListener("resize", handleResize)
      return () => window.removeEventListener("resize", handleResize)
    }
  }, [mobileMenuOpen])

  return (
    <div className="min-h-screen bg-black text-gray-100 relative overflow-x-hidden">
      {/* Scroll Progress Bar */}
      <ScrollProgress />

      {/* Floating Neon Orbs */}
      <FloatingNeonOrbs />

      {/* Neon Lines */}
      <NeonLines />

      {/* Mobile Menu Button */}
      <Button
        variant="ghost"
        size="icon"
        className="fixed top-4 left-4 z-[60] xl:hidden bg-black border border-purple-500 hover:shadow-[0_0_10px_rgba(168,85,247,0.5)]"
        onClick={() => setMobileMenuOpen(!mobileMenuOpen)}
        aria-label={mobileMenuOpen ? "Close menu" : "Open menu"}
        aria-expanded={mobileMenuOpen}
        aria-controls="mobile-menu"
      >
        {mobileMenuOpen ? <X className="h-6 w-6" /> : <Menu className="h-6 w-6" />}
      </Button>

      {/* Left Sidebar - Fixed Navigation */}
      <aside
        id="mobile-menu"
        className={`
          fixed top-0 left-0 h-screen w-80 bg-black z-50
          transition-transform duration-300 ease-in-out
          ${mobileMenuOpen ? "translate-x-0" : "-translate-x-full"}
          xl:translate-x-0
          flex flex-col
        `}
        aria-hidden={typeof window !== "undefined" && !mobileMenuOpen && window.innerWidth < 1280}
      >
        <div className="p-6 text-center">
          <h1 className="text-3xl font-black bg-gradient-to-r from-pink-500 via-purple-500 to-blue-500 bg-clip-text text-transparent leading-tight heading-orbitron-bold">
            KABUKICHO
          </h1>
          <p className="text-xs text-gray-400 mt-2 tracking-wider font-medium">THE VIBRANT NIGHT</p>
        </div>

        <nav className="flex-grow p-6 space-y-3 overflow-y-auto scrollbar-thin scrollbar-track-black/20 scrollbar-thumb-purple-500/50">
          {navigationItems.map((item) => (
            <NeonNavItem
              key={item.id}
              icon={item.icon}
              label={item.label}
              isActive={activeSection === item.id}
              onClick={() => scrollToSection(item.id)}
              variant={item.variant}
            />
          ))}
        </nav>

        <div className="p-6 space-y-4">
          <h3 className="text-sm font-semibold text-pink-400 tracking-wider">„Ç§„ÉÅ„Ç™„Ç∑„Çπ„Éù„ÉÉ„Éà</h3>
          {recommendedSpots.slice(0, 2).map((spot, index) => (
            <Card
              key={index}
              className="bg-black border border-transparent hover:border-purple-500 hover:shadow-[0_0_10px_rgba(168,85,247,0.5)] transition-all duration-300"
            >
              <CardContent className="p-3">
                <div className="flex space-x-3 items-center">
                  <LazyImage
                    src={spot.image}
                    alt={spot.name}
                    className="w-12 h-12 rounded-md object-cover transition-transform duration-300"
                    width={48}
                    height={48}
                  />
                  <div className="flex-1 min-w-0">
                    <h4 className="font-semibold text-xs text-white group-hover:text-pink-300 transition-colors truncate">
                      {spot.name}
                    </h4>
                    <p className="text-xs text-gray-400 mt-0.5 line-clamp-2">{spot.description}</p>
                  </div>
                </div>
              </CardContent>
            </Card>
          ))}
        </div>
      </aside>

      {/* Main Content Area - With proper margin for fixed sidebar */}
      <div className="xl:ml-80 relative z-10">
        <main>
          {/* Hero Section - Pure Black Background */}
          {/* Hero Section - ‰ºòÂåñÈó¥Ë∑ùÂíåËøáÊ∏° */}
          <section id="hero" className="hero-section relative text-center section-padding bg-black">
            {/* Hero Content */}
            <div className="relative z-10 max-w-4xl mx-auto">
              <h2 className="text-4xl md:text-6xl lg:text-7xl xl:text-8xl font-black mb-8 md:mb-12 lg:mb-16 leading-tight tracking-tighter">
                {/* Enhanced with customizable properties */}
                <NeonTubeTextLight
                  className="block mb-4 md:mb-6 lg:mb-8 heading-orbitron-bold"
                  color="pink"
                  fontFamily="monoton"
                  animationType="breathing"
                  intensity="medium"
                >
                  Áú†„Çâ„Å™„ÅÑË°ó
                </NeonTubeTextLight>

                <NeonTubeTextLightBlue
                  className="block text-zen-kaku"
                  fontFamily="gothic"
                  animationType="breathing"
                  intensity="medium"
                >
                  Ê≠åËàû‰ºéÁî∫„Å∏
                </NeonTubeTextLightBlue>
              </h2>
              <p className="text-lg md:text-xl lg:text-2xl text-gray-300 mb-12 md:mb-16 lg:mb-20 max-w-2xl mx-auto leading-relaxed font-light">
                Êù±‰∫¨„ÅÆÂ§ú„ÇíÊîØÈÖç„Åô„Çã„ÄÅÂÖâ„Å®ÂΩ±„ÅÆËø∑ÂÆÆ„ÄÇ
                <br className="hidden md:block" />
                Êú™Áü•„Å™„Çã‰ΩìÈ®ì„Åå„ÄÅ„ÅÇ„Å™„Åü„ÇíÂæÖ„Å£„Å¶„ÅÑ„Çã„ÄÇ
              </p>
              <NeonButton
                variant="purple"
                size="lg"
                onClick={() => scrollToSection("nightlife")}
                className=" mt-8 rounded-full  flex items-center animate-breathing"
              >
                
                Â§ú„ÇíÊé¢Ê§ú„Åô„Çã
              </NeonButton>
            </div>

            {/* Ê∑ªÂä†Âêë‰∏ãÊªöÂä®ÊåáÁ§∫Âô® */}
            <div className="absolute bottom-8 md:bottom-12 left-1/2 transform -translate-x-1/2 animate-bounce">
              <div className="w-6 h-10 border-2 border-purple-500/50 rounded-full flex justify-center">
                <div className="w-1 h-3 bg-purple-500 rounded-full mt-2 animate-pulse"></div>
              </div>
            </div>
          </section>

          {/* Content Sections */}
          <div className="px-4 sm:px-6 md:px-10 lg:px-16 xl:px-20 py-20 md:py-28 lg:py-32 space-y-40 md:space-y-48 lg:space-y-56 xl:space-y-64 bg-black">
            {/* History Section */}
            <ParallaxSection speed={0.1}>
              <section id="history" className="max-w-5xl mx-auto">
                <h2 className="section-title text-purple-300 mb-16 md:mb-20 lg:mb-24 heading-orbitron">
                  <History className="inline-block w-10 h-10 mr-4" />
                  Ê≠åËàû‰ºéÁî∫„ÅÆÊ≠¥Âè≤ÔºöÂÜçÁîü„Å®Â§âË≤å„ÅÆÁâ©Ë™û
                </h2>
                <Card className="card-neon">
                  <CardContent className="p-8 md:p-12 lg:p-16 text-gray-300 leading-relaxed space-y-8 text-lg md:text-xl">
                    <p className="first-letter:text-5xl first-letter:font-bold first-letter:text-pink-400 first-letter:float-left first-letter:mr-3 first-letter:mt-1">
                      „Åã„Å§„Å¶ÊπøÂú∞Â∏Ø„Å†„Å£„Åü„Åì„ÅÆÂú∞„ÅØ„ÄÅÊà¶Âæå„ÅÆÁÅ∞Ááº„ÅÆ‰∏≠„Åã„Çâ„ÄåÊñáÂåñ„ÅÆË°ó„Äç„ÇíÁõÆÊåá„Åó„Å¶ÂÜçÁîü„Åï„Çå„Åæ„Åó„Åü„ÄÇ1948Âπ¥„ÄÅÊ≠åËàû‰ºéÂ∫ßË™òËá¥Ë®àÁîª„Å´„Å°„Å™„Çì„Åß„ÄåÊ≠åËàû‰ºéÁî∫„Äç„Å®ÂëΩÂêç„ÄÇ„Åó„Åã„Åó„ÄÅË≤°ÊîøÈõ£„ÅßÊ≠åËàû‰ºéÂ∫ß„ÅØÂπª„Å®„Å™„Çä„ÄÅ‰ª£„Çè„Çä„Å´Êò†ÁîªÈ§®„ÇÑ„Çπ„Ç±„Éº„ÉàÂ†¥„ÅåÂª∫Ë®≠„Åï„Çå„ÄÅ„Ç®„É≥„Çø„Éº„ÉÜ„Ç§„É°„É≥„Éà„ÅÆË°ó„Å®„Åó„Å¶„ÅÆ‰∏ÄÊ≠©„ÇíË∏è„ÅøÂá∫„Åó„Åæ„Åô„ÄÇ
                    </p>
                    <p className="indent-8">
                      È´òÂ∫¶ÁµåÊ∏àÊàêÈï∑Êúü„Å´„ÅØ„ÄÅ„Éá„Ç£„Çπ„Ç≥„ÇÑ„ÇØ„É©„Éñ„ÅåÊ¨°„ÄÖ„Å®„Ç™„Éº„Éó„É≥„Åó„ÄÅËã•ËÄÖÊñáÂåñ„ÅÆÁô∫‰ø°Âú∞„Å´„ÄÇ„Åó„Åã„Åó„ÄÅ„Éê„Éñ„É´Â¥©Â£äÂæå„ÅØÊ≤ªÂÆâ„ÅåÊÇ™Âåñ„Åó„ÄÅ„ÄåÊÄñ„ÅÑË°ó„Äç„ÅÆ„Ç§„É°„Éº„Ç∏„ÇÇÂÆöÁùÄ„Åó„Åæ„Åó„Åü„ÄÇ
                    </p>
                    <p className="indent-8">
                      2000Âπ¥‰ª£‰ª•Èôç„ÄÅË°åÊîø„Å®Âú∞ÂÖÉ‰ΩèÊ∞ë„Å´„Çà„ÇãÊµÑÂåñ‰ΩúÊà¶„ÇÑÂÜçÈñãÁô∫„ÅåÈÄ≤„Åø„ÄÅÂÆâÂÖ®„ÅßÂ§öÊßò„Å™È≠ÖÂäõ„ÇíÊåÅ„Å§Ë°ó„Å∏„Å®Â§âË≤å„ÇíÈÅÇ„Åí„Å¶„ÅÑ„Åæ„Åô„ÄÇÊ≠åËàû‰ºéÁî∫„Çø„ÉØ„Éº„ÅÆÈñãÊ•≠„ÅØ„ÄÅ„Åù„ÅÆË±°Âæ¥„Å®Ë®Ä„Åà„Çã„Åß„Åó„Çá„ÅÜ„ÄÇ
                    </p>
                    <blockquote className="border-l-4 border-purple-500 pl-6 italic text-purple-200 bg-purple-900/20 p-4 rounded-r-lg">
                      „ÄåÂ∏∏„Å´ÊôÇ‰ª£„ÇíÊò†„ÅóÂá∫„Åó„ÄÅÂ§âÂåñ„ÅóÁ∂ö„Åë„ÇãÊ≠åËàû‰ºéÁî∫„ÄÇ„Åù„ÅÆ„ÉÄ„Ç§„Éä„Éü„Ç∫„É†„Åì„Åù„Åå„ÄÅ‰∫∫„ÄÖ„ÇíÊÉπ„Åç„Å§„Åë„Å¶„ÇÑ„Åæ„Å™„ÅÑÈ≠ÖÂäõ„ÅÆÊ∫êÊ≥â„Å™„ÅÆ„Åß„Åô„ÄÇ„Äç
                    </blockquote>
                  </CardContent>
                </Card>
              </section>
            </ParallaxSection>

            {/* Nightlife Section */}
            <ParallaxSection speed={0.15}>
              <section id="nightlife" className="max-w-6xl mx-auto">
                <h2 className="section-title text-pink-300 mb-16 md:mb-20 lg:mb-24 heading-orbitron">
                  <Lightbulb className="inline-block w-10 h-10 mr-4" />
                  Â§ú„ÅÆ„Ç®„É≥„Çø„Éº„ÉÜ„Ç§„É°„É≥„ÉàÔºö‰∫îÊÑü„ÇíÂà∫ÊøÄ„Åô„Çã‰ΩìÈ®ì
                </h2>
                <p className="text-center text-gray-400 text-lg md:text-xl mb-20 md:mb-24 lg:mb-28 max-w-3xl mx-auto leading-relaxed">
                  Ê≠åËàû‰ºéÁî∫„ÅÆÂ§ú„ÅØ„ÄÅ„ÅÇ„Çâ„ÇÜ„ÇãÊÑüË¶ö„ÇíÂà∫ÊøÄ„Åô„Çã‰ΩìÈ®ì„ÅßÊ∫Ä„Å°„Å¶„ÅÑ„Åæ„Åô„ÄÇ
                  <br />
                  ‰ºùÁµ±„Å®Èù©Êñ∞„Åå‰∫§Â∑Æ„Åô„Çã„ÄÅÂîØ‰∏ÄÁÑ°‰∫å„ÅÆ„Ç®„É≥„Çø„Éº„ÉÜ„Ç§„É°„É≥„ÉàÁ©∫Èñì„Çí„ÅîÁ¥π‰ªã„Åó„Åæ„Åô„ÄÇ
                </p>
                <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6 md:gap-8 auto-rows-fr">
                  {spotCards.map((spot, index) => (
                    <SpotCardComponent key={index} spot={spot} index={index} />
                  ))}
                </div>
              </section>
            </ParallaxSection>

            {/* Gourmet Section */}
            <ParallaxSection speed={0.08}>
              <section id="gourmet" className="max-w-5xl mx-auto">
                <h2 className="section-title text-blue-300 mb-16 md:mb-20 lg:mb-24 heading-orbitron">
                  <Utensils className="inline-block w-10 h-10 mr-4" />
                  Áµ∂ÂìÅ„Ç∞„É´„É°ÔºöÁú†„Çâ„Å™„ÅÑË°ó„ÅÆËÉÉË¢ã„ÇíÊ∫Ä„Åü„Åô
                </h2>
                <div className="space-y-12">
                  <Card className="card-neon pulse-neon overflow-hidden">
                    <CardContent className="p-0">
                      <div className="lg:flex">
                        <div className="lg:w-2/5">
                          <LazyImage
                            src="/„Éë„ÉÅ„É≥„Ç≥2.jpg"
                            alt="Ê∑±Â§ú„ÅÆ„É©„Éº„É°„É≥"
                            className="w-full h-64 lg:h-full object-cover neon-glow-blue"
                          />
                        </div>
                        <div className="lg:w-3/5 p-10 md:p-12">
                          <h3 className="text-3xl lg:text-4xl font-bold text-blue-300 mb-6 text-glow tracking-tight leading-tight heading-orbitron">
                            24ÊôÇÈñìÊà¶„Åà„ÇãÔºÅ
                            <br />
                            Ê∑±Â§ú„É°„Ç∑„ÅÆËÅñÂú∞
                          </h3>
                          <div className="space-y-6 text-gray-300 leading-relaxed text-lg">
                            <p>
                              Ê≠åËàû‰ºéÁî∫„ÅØÈ£ü„ÅÆ„Çã„Å§„Åº„ÄÇÈ´òÁ¥öÂØøÂè∏„Åã„ÇâBÁ¥ö„Ç∞„É´„É°„Åæ„Åß„ÄÅ„ÅÇ„Çâ„ÇÜ„Çã„Ç∏„É£„É≥„É´„ÅÆÂë≥„Åå24ÊôÇÈñì„ÅÇ„Å™„Åü„ÇíÂæÖ„Å£„Å¶„ÅÑ„Åæ„Åô„ÄÇ
                            </p>
                            <p>
                              ÁµÇÈõª„ÇíÈÄÉ„Åó„Å¶„ÇÇÂ§ß‰∏àÂ§´„ÄÇÁÜ±„ÄÖ„ÅÆ„É©„Éº„É°„É≥„ÄÅ„Ç∏„É•„Éº„Ç∑„Éº„Å™ÁÑºËÇâ„ÄÅÂøÉÊ∏©„Åæ„ÇãÂ±ÖÈÖíÂ±ãÊñôÁêÜ„Åå„ÄÅÁñ≤„Çå„ÅüÂøÉ„Å®‰Ωì„ÇíÁôí„Åó„Å¶„Åè„Çå„Çã„Åß„Åó„Çá„ÅÜ„ÄÇ
                            </p>
                            <div className="flex items-center text-blue-400 neon-glow bg-blue-900/20 p-4 rounded-lg">
                              <Clock className="w-6 h-6 mr-3 animate-spin flex-shrink-0" />
                              <span className="font-medium">Â§ö„Åè„ÅÆÂ∫ó„ÅåÊ∑±Â§ú„ÉªÊó©Êúù„Åæ„ÅßÂñ∂Ê•≠‰∏≠</span>
                            </div>
                          </div>
                        </div>
                      </div>
                    </CardContent>
                  </Card>
                </div>
              </section>
            </ParallaxSection>

            {/* Gallery Section */}
            <ParallaxSection speed={0.12}>
              <section id="gallery" className="max-w-8xl mx-auto">
                <div className="text-center mb-20 md:mb-24 lg:mb-28">
                  <h2 className="section-title text-pink-400 mb-8 md:mb-10 lg:mb-12 heading-orbitron">
                    <Camera className="inline-block w-10 h-10 mr-4" />
                    „Éï„Ç©„Éà„ÇÆ„É£„É©„É™„ÉºÔºöÊ≠åËàû‰ºéÁî∫„ÅÆ‰∏áËèØÈè°
                  </h2>
                  <p className="text-gray-400 text-lg md:text-xl max-w-3xl mx-auto leading-relaxed">
                    ÂÖâ„Å®ÂΩ±„ÅåÁπî„Çä„Å™„Åô„ÄÅÊ≠åËàû‰ºéÁî∫„ÅÆÂ§öÂΩ©„Å™Ë°®ÊÉÖ„ÄÇ
                    <br />
                    „Éç„Ç™„É≥„ÅÆÊµ∑„ÄÅË∑ØÂú∞Ë£è„ÅÆ„Éâ„É©„Éû„ÄÅ‰∫∫„ÄÖ„ÅÆÂñßÈ®í„ÄÇ
                    <br />
                    ‰∏ÄÁû¨„ÇíÂàá„ÇäÂèñ„Å£„ÅüÂÜôÁúü„Åü„Å°„Åå„ÄÅ„Åì„ÅÆË°ó„ÅÆÁâ©Ë™û„ÇíË™û„Çä„Åæ„Åô„ÄÇ
                  </p>
                </div>

                {/* ÂàÜÈ°ûÁØ©ÈÅ∏ÊåâÈàï - ÂÑ™ÂåñÂ∏ÉÂ±Ä */}
                <div className="mb-20 md:mb-24 lg:mb-28">
                  <div className="flex flex-wrap justify-center gap-3 sm:gap-4 max-w-4xl mx-auto">
                    {galleryCategories.map((category) => (
                      <button
                        key={category.id}
                        onClick={() => setGalleryCategory(category.id)}
                        className={`px-4 sm:px-6 py-2.5 sm:py-3 rounded-full transition-all duration-300 text-sm font-medium tracking-wider bg-black border backdrop-blur-sm
                          ${
                            galleryCategory === category.id
                              ? "border-pink-400 text-pink-300 shadow-[0_0_15px_rgba(244,114,182,0.5),0_0_25px_rgba(244,114,182,0.3)] scale-105"
                              : "border-gray-600 text-gray-300 hover:border-pink-400 hover:text-pink-300 hover:shadow-[0_0_10px_rgba(244,114,182,0.3)] hover:scale-105"
                          }`}
                        aria-pressed={galleryCategory === category.id}
                      >
                        <span className="mr-2 text-base" aria-hidden="true">
                          {category.icon}
                        </span>
                        <span className="whitespace-nowrap">{category.label}</span>
                      </button>
                    ))}
                  </div>

                  {/* È°ØÁ§∫Áï∂ÂâçÂàÜÈ°ûÁöÑÂúñÁâáÊï∏Èáè */}
                  <div className="text-center mt-6">
                    <p className="text-gray-500 text-sm">
                      {filteredImages.length} Êûö„ÅÆÂÜôÁúü
                      {galleryCategory !== "all" && (
                        <span className="ml-2 text-pink-400">
                          ({galleryCategories.find((cat) => cat.id === galleryCategory)?.label})
                        </span>
                      )}
                    </p>
                  </div>
                </div>

                {/* ÂúñÁâáÁ∂≤Ê†º - ÂÑ™ÂåñÈüøÊáâÂºèÂ∏ÉÂ±Ä */}
                <div className="gallery-grid">
                  {filteredImages.map((image, index) => (
                    <GalleryImageComponent key={image.id} image={image} index={index} openImageModal={openImageModal} />
                  ))}
                </div>
              </section>
            </ParallaxSection>

            {/* Hidden Spots Section */}
            <ParallaxSection speed={0.05}>
              <section id="hidden" className="max-w-5xl mx-auto">
                <h2 className="section-title text-green-300 mb-16 md:mb-20 lg:mb-24 heading-orbitron">
                  <Search className="inline-block w-10 h-10 mr-4" />
                  ÁßòÂØÜ„ÅÆÂ†¥ÊâÄÔºöÈÄö„Å†„Åë„ÅåÁü•„ÇãÊ≠åËàû‰ºéÁî∫
                </h2>
                <Card className="card-neon neon-glow-blue overflow-hidden">
                  <CardContent className="p-8 md:p-12 lg:p-16 text-gray-300 leading-relaxed space-y-8 text-lg md:text-xl">
                    <p className="first-letter:text-5xl first-letter:font-bold first-letter:text-green-400 first-letter:float-left first-letter:mr-3 first-letter:mt-1">
                      ÂñßÈ®í„ÅÆË£è„Å´„ÅØ„ÄÅ„Åæ„Å†Áü•„Çâ„Çå„Åñ„ÇãÊ≠åËàû‰ºéÁî∫„ÅÆÈ°î„ÅåÈö†„Åï„Çå„Å¶„ÅÑ„Åæ„Åô„ÄÇ‰∏ÄÊú¨Ë∑ØÂú∞„ÇíÂÖ•„Çå„Å∞„ÄÅ„Åù„Åì„ÅØ„Åæ„Çã„ÅßÂà•‰∏ñÁïå„ÄÇ
                    </p>
                    <div className="grid md:grid-cols-2 gap-8 my-8">
                      <div className="space-y-4">
                        <h4 className="text-xl font-semibold text-green-300 neon-text">Èö†„ÇåÂÆ∂„Çπ„Éù„ÉÉ„Éà</h4>
                        <ul className="space-y-2 text-base">
                          <li className="flex items-center">
                            <span className="w-2 h-2 bg-green-400 rounded-full mr-3"></span>
                            ÂÄãÊÄßÁöÑ„Å™„Éû„Çπ„Çø„Éº„ÅåÂñ∂„ÇÄÈö†„ÇåÂÆ∂„Éê„Éº
                          </li>
                          <li className="flex items-center">
                            <span className="w-2 h-2 bg-green-400 rounded-full mr-3"></span>
                            Âú∞ÂÖÉÊ∞ë„Å´ÊÑõ„Åï„Çå„ÇãËÄÅËàóÈ£üÂ†Ç
                          </li>
                          <li className="flex items-center">
                            <span className="w-2 h-2 bg-green-400 rounded-full mr-3"></span>
                            „Ç¢„Éº„Éà„Å™Á©∫Èñì„ÅåÂ∫É„Åå„ÇãÂ∞è„Åï„Å™„ÇÆ„É£„É©„É™„Éº
                          </li>
                        </ul>
                      </div>
                      <div className="space-y-4">
                        <h4 className="text-xl font-semibold text-green-300 neon-text">Êé¢Á¥¢„ÅÆ„Ç≥„ÉÑ</h4>
                        <p className="text-base">
                          „Ç¨„Ç§„Éâ„Éñ„ÉÉ„ÇØ„Å´„ÅØËºâ„Å£„Å¶„ÅÑ„Å™„ÅÑ„ÄÅ„ÅÇ„Å™„Åü„Å†„Åë„ÅÆ„ÄåÁßòÂØÜ„ÅÆÂ†¥ÊâÄ„Äç„ÇíË¶ã„Å§„Åë„Çã„ÅÆ„ÇÇÊ≠åËàû‰ºéÁî∫Êï£Á≠ñ„ÅÆÈÜçÈÜêÂë≥„ÄÇÂãáÊ∞ó„ÇíÂá∫„Åó„Å¶Êââ„ÇíÈñã„Åë„Å∞„ÄÅÂøò„Çå„Çâ„Çå„Å™„ÅÑÂá∫‰ºö„ÅÑ„ÇÑÁô∫Ë¶ã„ÅåÂæÖ„Å£„Å¶„ÅÑ„Åæ„Åô„ÄÇ
                        </p>
                      </div>
                    </div>
                    <div className="flex items-center text-green-400 neon-glow bg-green-900/20 p-6 rounded-lg">
                      <MapPin className="w-8 h-8 mr-4 animate-bounce flex-shrink-0" />
                      <span className="font-medium text-lg">Ëá™ÂàÜ„Å†„Åë„ÅÆÂÆùÁâ©„ÇíÊé¢„Åó„Å´Âá∫„Åã„Åë„Çà„ÅÜ</span>
                    </div>
                  </CardContent>
                </Card>
              </section>
            </ParallaxSection>
          </div>
        </main>
      </div>

      {/* Image Modal */}
      <ImageModal
        selectedImage={selectedImage}
        images={galleryImages}
        closeModal={closeImageModal}
        navigateImage={navigateImage}
      />

      {/* Mobile Menu Overlay */}
      {mobileMenuOpen && (
        <div
          className="fixed inset-0 bg-black/80 backdrop-blur-sm z-40 xl:hidden"
          onClick={() => setMobileMenuOpen(false)}
          aria-hidden="true"
        />
      )}
    </div>
  )
}
